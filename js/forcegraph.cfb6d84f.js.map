{"version":3,"sources":["webpack:///./src/components/ForceGraph.vue?e16e","webpack:///src/components/ForceGraph.vue","webpack:///./src/components/ForceGraph.vue?6a3d","webpack:///./src/components/ForceGraph.vue"],"names":["Graph","render","_vm","this","_h","$createElement","_self","_c","_m","staticRenderFns","attrs","name","computed","data","mounted","document","getElementById","helper","position","y","material","opacity","transparent","scene","add","bloomPass","strength","radius","threshold","postProcessingComposer","addPass","wireframe","cube","depthTest","addEventListener","methods","component"],"mappings":"qHAAA,ICwBIA,EDxBAC,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAsBH,EAAII,MAAMC,GAAO,OAAOL,EAAIM,GAAG,IACnGC,EAAkB,CAAC,WAAa,IAAIP,EAAIC,KAASC,EAAGF,EAAIG,eAAmBE,EAAGL,EAAII,MAAMC,IAAIH,EAAG,OAAOG,EAAG,MAAM,CAACG,MAAM,CAAC,GAAK,QAAQ,CAACH,EAAG,MAAM,CAACG,MAAM,CAAC,GAAK,kB,8ECoB/J,OACA,UACA,UAEA,GACEC,KAAM,OACNC,SAAU,GAEVC,KAAM,WACJ,MAAO,IAGTC,QAAS,WAAX,WACId,EAAQ,OAAZ,OAAY,GACRA,EAAMe,SAASC,eAAe,aAClC,0BACA,gBACA,yBACA,kCACA,0CAAM,MAAN,gBACA,uBAAM,OAAN,+EACA,uBAAM,OAAN,gBACA,sCAAM,OAAN,gBACA,gCACA,yBAAM,OAAN,kBACA,0BAEA,uBAEM,EAAN,QACM,EAAN,QACA,GACQ,EAAR,OAKM,EAAN,QAEM,EAAN,sBAEA,yBACM,EAAN,QACM,EAAN,QAEA,IACQ,EAAR,OACQ,EAAR,cACQ,EAAR,eAGM,EAAN,qBAGI,IAAIC,EAAS,IAAI,EAArB,aACIA,EAAOC,SAASC,GAAK,IACrBF,EAAOG,SAASC,QAAU,GAC1BJ,EAAOG,SAASE,aAAc,EAE9BtB,EAAMuB,QAAQC,IAAIP,GAElBA,EAAS,IAAI,EAAjB,YACIA,EAAOC,SAASC,EAAI,GACpBF,EAAOG,SAASC,QAAU,EAC1BJ,EAAOG,SAASE,aAAc,EAG9B,IAAJ,aACIG,EAAUC,SAAW,EACrBD,EAAUE,OAAS,EACnBF,EAAUG,UAAY,GACtB5B,EAAM6B,yBAAyBC,QAAQL,GAEvC,IAAJ,uBACQM,EAAY,IAAI,EAAxB,SAEQC,EAAO,IAAI,EAAnB,QAEIA,EAAKZ,SAASa,WAAY,EAC1BD,EAAKZ,SAASC,QAAU,EACxBW,EAAKZ,SAASE,aAAc,EAE5BtB,EAAMuB,QAAQC,IAAIQ,GAClBjB,SAASmB,iBAAiB,YAAY,WAA1C,wDAKEC,QAAS,CACP,gBADJ,WAGM,EACN,yBACA,yBACA,0DCnH+Y,I,YCO3YC,EAAY,eACd,EACAnC,EACAQ,GACA,EACA,KACA,KACA,MAIa,aAAA2B,E","file":"js/forcegraph.cfb6d84f.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('div',{attrs:{\"id\":\"3d-graph\"}})])}]\n\nexport { render, staticRenderFns }","<template>\r\n  <div id=\"app\">\r\n    <!-- <img alt=\"Vue logo\" src=\"../assets/logo.png\"> -->\r\n    <div id=\"3d-graph\"></div>\r\n  </div>\r\n</template>\r\n\r\n\r\n<script>\r\nimport ForceGraph3D from '3d-force-graph';\r\nimport { UnrealBloomPass } from 'three/examples/jsm/postprocessing/UnrealBloomPass.js';\r\nimport * as THREE from 'three'\r\n\r\n\r\n    // const Graph = ForceGraph3D()\r\n    //   (document.getElementById('3d-graph'))\r\n    //     .jsonUrl('../datasets/miserables.json')\r\n    //     .nodeLabel('id')\r\n    //     .nodeAutoColorBy('group')\r\n    //     .linkDirectionalParticles(\"value\")\r\n    //     .linkDirectionalParticleSpeed(d => d.value * 0.001);\r\nlet hoverNode = null;\r\nconst highlightNodes = new Set();\r\nconst highlightLinks = new Set();\r\nvar Graph\r\nexport default {\r\n  name: \"Home\",\r\n  computed: {\r\n  },\r\n  data: function () {\r\n    return {\r\n    }\r\n  },\r\n  mounted: function () {\r\n    Graph = ForceGraph3D();\r\n    Graph(document.getElementById('3d-graph')) //.graphData('../assets/dataset.json')\r\n        .jsonUrl('./dataset.json')\r\n        .nodeLabel('id')\r\n        .nodeAutoColorBy('group')\r\n        .linkDirectionalParticles(\"value\")\r\n        .linkDirectionalParticleSpeed(d => d.value * 0.001)\r\n        .nodeColor(node => highlightNodes.has(node) ? node === hoverNode ? 'rgb(255,0,0,1)' : 'rgba(255,160,0,0.8)' : 'rgba(0,255,255,0.6)')\r\n        .linkWidth(link => highlightLinks.has(link) ? 4 : 1)\r\n        .linkDirectionalParticles(link => highlightLinks.has(link) ? 4 : 0)\r\n        .linkDirectionalParticleWidth(4)\r\n        .onNodeClick(node => console.log(node))\r\n        .onNodeHover(node => {\r\n          // no state change\r\n          if ((!node && !highlightNodes.size) || (node && hoverNode === node)) return;\r\n\r\n          highlightNodes.clear();\r\n          highlightLinks.clear();\r\n          if (node) {\r\n            highlightNodes.add(node);\r\n            // node.neighbors.forEach(neighbor => highlightNodes.add(neighbor));\r\n            // node.links.forEach(link => highlightLinks.add(link));\r\n          }\r\n\r\n          hoverNode = node || null;\r\n\r\n          this.updateHighlight();\r\n        })\r\n        .onLinkHover(link => {\r\n          highlightNodes.clear();\r\n          highlightLinks.clear();\r\n\r\n          if (link) {\r\n            highlightLinks.add(link);\r\n            highlightNodes.add(link.source);\r\n            highlightNodes.add(link.target);\r\n          }\r\n\r\n          this.updateHighlight();\r\n        })\r\n\r\n    var helper = new THREE.GridHelper(2000, 10)\r\n    helper.position.y = -500\r\n    helper.material.opacity = 0.7\r\n    helper.material.transparent = true\r\n    // helper.material.color = 0x0f00f0\r\n    Graph.scene().add(helper)\r\n\r\n    helper = new THREE.GridHelper(2000, 5)\r\n    helper.position.y = 20\r\n    helper.material.opacity = 1\r\n    helper.material.transparent = true\r\n    // Graph.scene().add(helper)\r\n\r\n    const bloomPass = new UnrealBloomPass();\r\n    bloomPass.strength = 2;\r\n    bloomPass.radius = 1;\r\n    bloomPass.threshold = 0.1;\r\n    Graph.postProcessingComposer().addPass(bloomPass);\r\n\r\n    const geometry = new THREE.BoxGeometry(30, 30, 30)\r\n    var wireframe = new THREE.WireframeGeometry(geometry)\r\n\r\n    var cube = new THREE.LineSegments(wireframe)\r\n    // cube = new THREE.Mesh(wireframe)\r\n    cube.material.depthTest = true\r\n    cube.material.opacity = 1\r\n    cube.material.transparent = true\r\n\r\n    Graph.scene().add(cube)\r\n    document.addEventListener('dblclick', () => document.documentElement.requestFullscreen());\r\n     \r\n    \r\n        \r\n  },\r\n  methods: {\r\n      updateHighlight() {\r\n      // trigger update of highlighted objects in scene\r\n        Graph\r\n            .nodeColor(Graph.nodeColor())\r\n            .linkWidth(Graph.linkWidth())\r\n            .linkDirectionalParticles(Graph.linkDirectionalParticles());\r\n    }\r\n\r\n  }\r\n};\r\n\r\n\r\n  </script>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/vuetify-loader/lib/loader.js??ref--18-0!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ForceGraph.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/vuetify-loader/lib/loader.js??ref--18-0!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ForceGraph.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ForceGraph.vue?vue&type=template&id=6a0ecb49&\"\nimport script from \"./ForceGraph.vue?vue&type=script&lang=js&\"\nexport * from \"./ForceGraph.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}