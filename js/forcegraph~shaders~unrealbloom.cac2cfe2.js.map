{"version":3,"sources":["webpack:///./node_modules/three/examples/jsm/postprocessing/Pass.js","webpack:///./node_modules/three/examples/jsm/postprocessing/ShaderPass.js","webpack:///./node_modules/three/examples/jsm/postprocessing/MaskPass.js","webpack:///./node_modules/three/examples/jsm/postprocessing/EffectComposer.js","webpack:///./node_modules/three/examples/jsm/controls/OrbitControls.js","webpack:///./node_modules/three/examples/jsm/postprocessing/RenderPass.js","webpack:///./node_modules/three/examples/jsm/shaders/LuminosityHighPassShader.js","webpack:///./node_modules/three/examples/jsm/postprocessing/UnrealBloomPass.js","webpack:///./node_modules/three/examples/jsm/shaders/CopyShader.js"],"names":["Pass","this","enabled","needsSwap","clear","renderToScreen","Object","assign","prototype","setSize","render","console","error","FullScreenQuad","camera","geometry","material","_mesh","defineProperty","get","set","value","dispose","renderer","ShaderPass","shader","textureID","call","undefined","uniforms","clone","defines","vertexShader","fragmentShader","fsQuad","create","constructor","writeBuffer","readBuffer","texture","setRenderTarget","autoClearColor","autoClearDepth","autoClearStencil","MaskPass","scene","inverse","writeValue","clearValue","context","getContext","state","buffers","color","setMask","depth","setLocked","stencil","setTest","setOp","REPLACE","setFunc","ALWAYS","setClear","EQUAL","KEEP","ClearMaskPass","EffectComposer","renderTarget","parameters","minFilter","magFilter","format","stencilBuffer","size","getSize","_pixelRatio","getPixelRatio","_width","width","_height","height","name","renderTarget1","renderTarget2","passes","CopyShader","copyPass","clock","swapBuffers","tmp","addPass","pass","push","insertPass","index","splice","isLastEnabledPass","passIndex","i","length","deltaTime","getDelta","currentRenderTarget","getRenderTarget","maskActive","il","NOTEQUAL","reset","effectiveWidth","effectiveHeight","setPixelRatio","pixelRatio","OrbitControls","object","domElement","warn","document","target","minDistance","maxDistance","Infinity","minZoom","maxZoom","minPolarAngle","maxPolarAngle","Math","PI","minAzimuthAngle","maxAzimuthAngle","enableDamping","dampingFactor","enableZoom","zoomSpeed","enableRotate","rotateSpeed","enablePan","panSpeed","screenSpacePanning","keyPanSpeed","autoRotate","autoRotateSpeed","enableKeys","keys","LEFT","UP","RIGHT","BOTTOM","mouseButtons","ROTATE","MIDDLE","DOLLY","PAN","touches","ONE","TWO","DOLLY_PAN","target0","position0","position","zoom0","zoom","getPolarAngle","spherical","phi","getAzimuthalAngle","theta","saveState","scope","copy","updateProjectionMatrix","dispatchEvent","changeEvent","update","STATE","NONE","offset","quat","setFromUnitVectors","up","quatInverse","lastPosition","lastQuaternion","sub","applyQuaternion","setFromVector3","rotateLeft","getAutoRotationAngle","sphericalDelta","max","min","makeSafe","radius","scale","addScaledVector","panOffset","add","setFromSpherical","lookAt","multiplyScalar","zoomChanged","distanceToSquared","EPS","dot","quaternion","removeEventListener","onContextMenu","onMouseDown","onMouseWheel","onTouchStart","onTouchEnd","onTouchMove","onMouseMove","onMouseUp","onKeyDown","type","startEvent","endEvent","TOUCH_ROTATE","TOUCH_PAN","TOUCH_DOLLY_PAN","TOUCH_DOLLY_ROTATE","rotateStart","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","getZoomScale","pow","angle","rotateUp","panLeft","v","distance","objectMatrix","setFromMatrixColumn","panUp","crossVectors","pan","deltaX","deltaY","element","isPerspectiveCamera","targetDistance","tan","fov","clientHeight","matrix","isOrthographicCamera","right","left","clientWidth","top","bottom","dollyOut","dollyScale","dollyIn","handleMouseDownRotate","event","clientX","clientY","handleMouseDownDolly","handleMouseDownPan","handleMouseMoveRotate","subVectors","x","y","handleMouseMoveDolly","handleMouseMovePan","handleMouseUp","handleMouseWheel","handleKeyDown","needsUpdate","keyCode","preventDefault","handleTouchStartRotate","pageX","pageY","handleTouchStartPan","handleTouchStartDolly","dx","dy","sqrt","handleTouchStartDollyPan","handleTouchStartDollyRotate","handleTouchMoveRotate","handleTouchMovePan","handleTouchMoveDolly","handleTouchMoveDollyPan","handleTouchMoveDollyRotate","handleTouchEnd","mouseAction","focus","window","button","ctrlKey","metaKey","shiftKey","addEventListener","stopPropagation","DOLLY_ROTATE","tabIndex","MapControls","RenderPass","overrideMaterial","clearColor","clearAlpha","clearDepth","oldClearColor","oldClearAlpha","oldOverrideMaterial","oldAutoClear","autoClear","getClearColor","getHex","getClearAlpha","setClearColor","LuminosityHighPassShader","shaderID","join","UnrealBloomPass","resolution","strength","threshold","pars","renderTargetsHorizontal","renderTargetsVertical","nMips","resx","round","resy","renderTargetBright","generateMipmaps","renderTargetHorizonal","renderTargetVertical","highPassShader","highPassUniforms","materialHighPassFilter","separableBlurMaterials","kernelSizeArray","getSeperableBlurMaterial","compositeMaterial","getCompositeMaterial","bloomFactors","bloomTintColors","copyShader","copyUniforms","materialCopy","blending","depthTest","depthWrite","transparent","basic","map","inputRenderTarget","BlurDirectionX","BlurDirectionY","kernelRadius"],"mappings":"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","file":"js/forcegraph~shaders~unrealbloom.cac2cfe2.js","sourcesContent":["import {\n\tOrthographicCamera,\n\tPlaneBufferGeometry,\n\tMesh\n} from \"../../../build/three.module.js\";\n\nfunction Pass() {\n\n\t// if set to true, the pass is processed by the composer\n\tthis.enabled = true;\n\n\t// if set to true, the pass indicates to swap read and write buffer after rendering\n\tthis.needsSwap = true;\n\n\t// if set to true, the pass clears its buffer before rendering\n\tthis.clear = false;\n\n\t// if set to true, the result of the pass is rendered to screen. This is set automatically by EffectComposer.\n\tthis.renderToScreen = false;\n\n}\n\nObject.assign( Pass.prototype, {\n\n\tsetSize: function ( /* width, height */ ) {},\n\n\trender: function ( /* renderer, writeBuffer, readBuffer, deltaTime, maskActive */ ) {\n\n\t\tconsole.error( 'THREE.Pass: .render() must be implemented in derived pass.' );\n\n\t}\n\n} );\n\n// Helper for passes that need to fill the viewport with a single quad.\n\nPass.FullScreenQuad = ( function () {\n\n\tvar camera = new OrthographicCamera( - 1, 1, 1, - 1, 0, 1 );\n\tvar geometry = new PlaneBufferGeometry( 2, 2 );\n\n\tvar FullScreenQuad = function ( material ) {\n\n\t\tthis._mesh = new Mesh( geometry, material );\n\n\t};\n\n\tObject.defineProperty( FullScreenQuad.prototype, 'material', {\n\n\t\tget: function () {\n\n\t\t\treturn this._mesh.material;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._mesh.material = value;\n\n\t\t}\n\n\t} );\n\n\tObject.assign( FullScreenQuad.prototype, {\n\n\t\tdispose: function () {\n\n\t\t\tthis._mesh.geometry.dispose();\n\n\t\t},\n\n\t\trender: function ( renderer ) {\n\n\t\t\trenderer.render( this._mesh, camera );\n\n\t\t}\n\n\t} );\n\n\treturn FullScreenQuad;\n\n} )();\n\nexport { Pass };\n","/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nimport {\n\tShaderMaterial,\n\tUniformsUtils\n} from \"../../../build/three.module.js\";\nimport { Pass } from \"../postprocessing/Pass.js\";\n\nvar ShaderPass = function ( shader, textureID ) {\n\n\tPass.call( this );\n\n\tthis.textureID = ( textureID !== undefined ) ? textureID : \"tDiffuse\";\n\n\tif ( shader instanceof ShaderMaterial ) {\n\n\t\tthis.uniforms = shader.uniforms;\n\n\t\tthis.material = shader;\n\n\t} else if ( shader ) {\n\n\t\tthis.uniforms = UniformsUtils.clone( shader.uniforms );\n\n\t\tthis.material = new ShaderMaterial( {\n\n\t\t\tdefines: Object.assign( {}, shader.defines ),\n\t\t\tuniforms: this.uniforms,\n\t\t\tvertexShader: shader.vertexShader,\n\t\t\tfragmentShader: shader.fragmentShader\n\n\t\t} );\n\n\t}\n\n\tthis.fsQuad = new Pass.FullScreenQuad( this.material );\n\n};\n\nShaderPass.prototype = Object.assign( Object.create( Pass.prototype ), {\n\n\tconstructor: ShaderPass,\n\n\trender: function ( renderer, writeBuffer, readBuffer /*, deltaTime, maskActive */ ) {\n\n\t\tif ( this.uniforms[ this.textureID ] ) {\n\n\t\t\tthis.uniforms[ this.textureID ].value = readBuffer.texture;\n\n\t\t}\n\n\t\tthis.fsQuad.material = this.material;\n\n\t\tif ( this.renderToScreen ) {\n\n\t\t\trenderer.setRenderTarget( null );\n\t\t\tthis.fsQuad.render( renderer );\n\n\t\t} else {\n\n\t\t\trenderer.setRenderTarget( writeBuffer );\n\t\t\t// TODO: Avoid using autoClear properties, see https://github.com/mrdoob/three.js/pull/15571#issuecomment-465669600\n\t\t\tif ( this.clear ) renderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\n\t\t\tthis.fsQuad.render( renderer );\n\n\t\t}\n\n\t}\n\n} );\n\nexport { ShaderPass };\n","/**\n * @author alteredq / http://alteredqualia.com/\n */\n\n\nimport { Pass } from \"../postprocessing/Pass.js\";\n\nvar MaskPass = function ( scene, camera ) {\n\n\tPass.call( this );\n\n\tthis.scene = scene;\n\tthis.camera = camera;\n\n\tthis.clear = true;\n\tthis.needsSwap = false;\n\n\tthis.inverse = false;\n\n};\n\nMaskPass.prototype = Object.assign( Object.create( Pass.prototype ), {\n\n\tconstructor: MaskPass,\n\n\trender: function ( renderer, writeBuffer, readBuffer /*, deltaTime, maskActive */ ) {\n\n\t\tvar context = renderer.getContext();\n\t\tvar state = renderer.state;\n\n\t\t// don't update color or depth\n\n\t\tstate.buffers.color.setMask( false );\n\t\tstate.buffers.depth.setMask( false );\n\n\t\t// lock buffers\n\n\t\tstate.buffers.color.setLocked( true );\n\t\tstate.buffers.depth.setLocked( true );\n\n\t\t// set up stencil\n\n\t\tvar writeValue, clearValue;\n\n\t\tif ( this.inverse ) {\n\n\t\t\twriteValue = 0;\n\t\t\tclearValue = 1;\n\n\t\t} else {\n\n\t\t\twriteValue = 1;\n\t\t\tclearValue = 0;\n\n\t\t}\n\n\t\tstate.buffers.stencil.setTest( true );\n\t\tstate.buffers.stencil.setOp( context.REPLACE, context.REPLACE, context.REPLACE );\n\t\tstate.buffers.stencil.setFunc( context.ALWAYS, writeValue, 0xffffffff );\n\t\tstate.buffers.stencil.setClear( clearValue );\n\t\tstate.buffers.stencil.setLocked( true );\n\n\t\t// draw into the stencil buffer\n\n\t\trenderer.setRenderTarget( readBuffer );\n\t\tif ( this.clear ) renderer.clear();\n\t\trenderer.render( this.scene, this.camera );\n\n\t\trenderer.setRenderTarget( writeBuffer );\n\t\tif ( this.clear ) renderer.clear();\n\t\trenderer.render( this.scene, this.camera );\n\n\t\t// unlock color and depth buffer for subsequent rendering\n\n\t\tstate.buffers.color.setLocked( false );\n\t\tstate.buffers.depth.setLocked( false );\n\n\t\t// only render where stencil is set to 1\n\n\t\tstate.buffers.stencil.setLocked( false );\n\t\tstate.buffers.stencil.setFunc( context.EQUAL, 1, 0xffffffff ); // draw if == 1\n\t\tstate.buffers.stencil.setOp( context.KEEP, context.KEEP, context.KEEP );\n\t\tstate.buffers.stencil.setLocked( true );\n\n\t}\n\n} );\n\n\nvar ClearMaskPass = function () {\n\n\tPass.call( this );\n\n\tthis.needsSwap = false;\n\n};\n\nClearMaskPass.prototype = Object.create( Pass.prototype );\n\nObject.assign( ClearMaskPass.prototype, {\n\n\trender: function ( renderer /*, writeBuffer, readBuffer, deltaTime, maskActive */ ) {\n\n\t\trenderer.state.buffers.stencil.setLocked( false );\n\t\trenderer.state.buffers.stencil.setTest( false );\n\n\t}\n\n} );\n\nexport { MaskPass, ClearMaskPass };\n","/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nimport {\n\tClock,\n\tLinearFilter,\n\tMesh,\n\tOrthographicCamera,\n\tPlaneBufferGeometry,\n\tRGBAFormat,\n\tVector2,\n\tWebGLRenderTarget\n} from \"../../../build/three.module.js\";\nimport { CopyShader } from \"../shaders/CopyShader.js\";\nimport { ShaderPass } from \"../postprocessing/ShaderPass.js\";\nimport { MaskPass } from \"../postprocessing/MaskPass.js\";\nimport { ClearMaskPass } from \"../postprocessing/MaskPass.js\";\n\nvar EffectComposer = function ( renderer, renderTarget ) {\n\n\tthis.renderer = renderer;\n\n\tif ( renderTarget === undefined ) {\n\n\t\tvar parameters = {\n\t\t\tminFilter: LinearFilter,\n\t\t\tmagFilter: LinearFilter,\n\t\t\tformat: RGBAFormat,\n\t\t\tstencilBuffer: false\n\t\t};\n\n\t\tvar size = renderer.getSize( new Vector2() );\n\t\tthis._pixelRatio = renderer.getPixelRatio();\n\t\tthis._width = size.width;\n\t\tthis._height = size.height;\n\n\t\trenderTarget = new WebGLRenderTarget( this._width * this._pixelRatio, this._height * this._pixelRatio, parameters );\n\t\trenderTarget.texture.name = 'EffectComposer.rt1';\n\n\t} else {\n\n\t\tthis._pixelRatio = 1;\n\t\tthis._width = renderTarget.width;\n\t\tthis._height = renderTarget.height;\n\n\t}\n\n\tthis.renderTarget1 = renderTarget;\n\tthis.renderTarget2 = renderTarget.clone();\n\tthis.renderTarget2.texture.name = 'EffectComposer.rt2';\n\n\tthis.writeBuffer = this.renderTarget1;\n\tthis.readBuffer = this.renderTarget2;\n\n\tthis.renderToScreen = true;\n\n\tthis.passes = [];\n\n\t// dependencies\n\n\tif ( CopyShader === undefined ) {\n\n\t\tconsole.error( 'THREE.EffectComposer relies on CopyShader' );\n\n\t}\n\n\tif ( ShaderPass === undefined ) {\n\n\t\tconsole.error( 'THREE.EffectComposer relies on ShaderPass' );\n\n\t}\n\n\tthis.copyPass = new ShaderPass( CopyShader );\n\n\tthis.clock = new Clock();\n\n};\n\nObject.assign( EffectComposer.prototype, {\n\n\tswapBuffers: function () {\n\n\t\tvar tmp = this.readBuffer;\n\t\tthis.readBuffer = this.writeBuffer;\n\t\tthis.writeBuffer = tmp;\n\n\t},\n\n\taddPass: function ( pass ) {\n\n\t\tthis.passes.push( pass );\n\t\tpass.setSize( this._width * this._pixelRatio, this._height * this._pixelRatio );\n\n\t},\n\n\tinsertPass: function ( pass, index ) {\n\n\t\tthis.passes.splice( index, 0, pass );\n\n\t},\n\n\tisLastEnabledPass: function ( passIndex ) {\n\n\t\tfor ( var i = passIndex + 1; i < this.passes.length; i ++ ) {\n\n\t\t\tif ( this.passes[ i ].enabled ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t},\n\n\trender: function ( deltaTime ) {\n\n\t\t// deltaTime value is in seconds\n\n\t\tif ( deltaTime === undefined ) {\n\n\t\t\tdeltaTime = this.clock.getDelta();\n\n\t\t}\n\n\t\tvar currentRenderTarget = this.renderer.getRenderTarget();\n\n\t\tvar maskActive = false;\n\n\t\tvar pass, i, il = this.passes.length;\n\n\t\tfor ( i = 0; i < il; i ++ ) {\n\n\t\t\tpass = this.passes[ i ];\n\n\t\t\tif ( pass.enabled === false ) continue;\n\n\t\t\tpass.renderToScreen = ( this.renderToScreen && this.isLastEnabledPass( i ) );\n\t\t\tpass.render( this.renderer, this.writeBuffer, this.readBuffer, deltaTime, maskActive );\n\n\t\t\tif ( pass.needsSwap ) {\n\n\t\t\t\tif ( maskActive ) {\n\n\t\t\t\t\tvar context = this.renderer.getContext();\n\t\t\t\t\tvar stencil = this.renderer.state.buffers.stencil;\n\n\t\t\t\t\t//context.stencilFunc( context.NOTEQUAL, 1, 0xffffffff );\n\t\t\t\t\tstencil.setFunc( context.NOTEQUAL, 1, 0xffffffff );\n\n\t\t\t\t\tthis.copyPass.render( this.renderer, this.writeBuffer, this.readBuffer, deltaTime );\n\n\t\t\t\t\t//context.stencilFunc( context.EQUAL, 1, 0xffffffff );\n\t\t\t\t\tstencil.setFunc( context.EQUAL, 1, 0xffffffff );\n\n\t\t\t\t}\n\n\t\t\t\tthis.swapBuffers();\n\n\t\t\t}\n\n\t\t\tif ( MaskPass !== undefined ) {\n\n\t\t\t\tif ( pass instanceof MaskPass ) {\n\n\t\t\t\t\tmaskActive = true;\n\n\t\t\t\t} else if ( pass instanceof ClearMaskPass ) {\n\n\t\t\t\t\tmaskActive = false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.renderer.setRenderTarget( currentRenderTarget );\n\n\t},\n\n\treset: function ( renderTarget ) {\n\n\t\tif ( renderTarget === undefined ) {\n\n\t\t\tvar size = this.renderer.getSize( new Vector2() );\n\t\t\tthis._pixelRatio = this.renderer.getPixelRatio();\n\t\t\tthis._width = size.width;\n\t\t\tthis._height = size.height;\n\n\t\t\trenderTarget = this.renderTarget1.clone();\n\t\t\trenderTarget.setSize( this._width * this._pixelRatio, this._height * this._pixelRatio );\n\n\t\t}\n\n\t\tthis.renderTarget1.dispose();\n\t\tthis.renderTarget2.dispose();\n\t\tthis.renderTarget1 = renderTarget;\n\t\tthis.renderTarget2 = renderTarget.clone();\n\n\t\tthis.writeBuffer = this.renderTarget1;\n\t\tthis.readBuffer = this.renderTarget2;\n\n\t},\n\n\tsetSize: function ( width, height ) {\n\n\t\tthis._width = width;\n\t\tthis._height = height;\n\n\t\tvar effectiveWidth = this._width * this._pixelRatio;\n\t\tvar effectiveHeight = this._height * this._pixelRatio;\n\n\t\tthis.renderTarget1.setSize( effectiveWidth, effectiveHeight );\n\t\tthis.renderTarget2.setSize( effectiveWidth, effectiveHeight );\n\n\t\tfor ( var i = 0; i < this.passes.length; i ++ ) {\n\n\t\t\tthis.passes[ i ].setSize( effectiveWidth, effectiveHeight );\n\n\t\t}\n\n\t},\n\n\tsetPixelRatio: function ( pixelRatio ) {\n\n\t\tthis._pixelRatio = pixelRatio;\n\n\t\tthis.setSize( this._width, this._height );\n\n\t}\n\n} );\n\n\nvar Pass = function () {\n\n\t// if set to true, the pass is processed by the composer\n\tthis.enabled = true;\n\n\t// if set to true, the pass indicates to swap read and write buffer after rendering\n\tthis.needsSwap = true;\n\n\t// if set to true, the pass clears its buffer before rendering\n\tthis.clear = false;\n\n\t// if set to true, the result of the pass is rendered to screen. This is set automatically by EffectComposer.\n\tthis.renderToScreen = false;\n\n};\n\nObject.assign( Pass.prototype, {\n\n\tsetSize: function ( /* width, height */ ) {},\n\n\trender: function ( /* renderer, writeBuffer, readBuffer, deltaTime, maskActive */ ) {\n\n\t\tconsole.error( 'THREE.Pass: .render() must be implemented in derived pass.' );\n\n\t}\n\n} );\n\n// Helper for passes that need to fill the viewport with a single quad.\nPass.FullScreenQuad = ( function () {\n\n\tvar camera = new OrthographicCamera( - 1, 1, 1, - 1, 0, 1 );\n\tvar geometry = new PlaneBufferGeometry( 2, 2 );\n\n\tvar FullScreenQuad = function ( material ) {\n\n\t\tthis._mesh = new Mesh( geometry, material );\n\n\t};\n\n\tObject.defineProperty( FullScreenQuad.prototype, 'material', {\n\n\t\tget: function () {\n\n\t\t\treturn this._mesh.material;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._mesh.material = value;\n\n\t\t}\n\n\t} );\n\n\tObject.assign( FullScreenQuad.prototype, {\n\n\t\tdispose: function () {\n\n\t\t\tthis._mesh.geometry.dispose();\n\n\t\t},\n\n\t\trender: function ( renderer ) {\n\n\t\t\trenderer.render( this._mesh, camera );\n\n\t\t}\n\n\t} );\n\n\treturn FullScreenQuad;\n\n} )();\n\nexport { EffectComposer, Pass };\n","/**\n * @author qiao / https://github.com/qiao\n * @author mrdoob / http://mrdoob.com\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author erich666 / http://erichaines.com\n * @author ScieCode / http://github.com/sciecode\n */\n\nimport {\n\tEventDispatcher,\n\tMOUSE,\n\tQuaternion,\n\tSpherical,\n\tTOUCH,\n\tVector2,\n\tVector3\n} from \"../../../build/three.module.js\";\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one-finger move\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\n\nvar OrbitControls = function ( object, domElement ) {\n\n\tif ( domElement === undefined ) console.warn( 'THREE.OrbitControls: The second parameter \"domElement\" is now mandatory.' );\n\tif ( domElement === document ) console.error( 'THREE.OrbitControls: \"document\" should not be used as the target \"domElement\". Please use \"renderer.domElement\" instead.' );\n\n\tthis.object = object;\n\tthis.domElement = domElement;\n\n\t// Set to false to disable this control\n\tthis.enabled = true;\n\n\t// \"target\" sets the location of focus, where the object orbits around\n\tthis.target = new Vector3();\n\n\t// How far you can dolly in and out ( PerspectiveCamera only )\n\tthis.minDistance = 0;\n\tthis.maxDistance = Infinity;\n\n\t// How far you can zoom in and out ( OrthographicCamera only )\n\tthis.minZoom = 0;\n\tthis.maxZoom = Infinity;\n\n\t// How far you can orbit vertically, upper and lower limits.\n\t// Range is 0 to Math.PI radians.\n\tthis.minPolarAngle = 0; // radians\n\tthis.maxPolarAngle = Math.PI; // radians\n\n\t// How far you can orbit horizontally, upper and lower limits.\n\t// If set, must be a sub-interval of the interval [ - Math.PI, Math.PI ].\n\tthis.minAzimuthAngle = - Infinity; // radians\n\tthis.maxAzimuthAngle = Infinity; // radians\n\n\t// Set to true to enable damping (inertia)\n\t// If damping is enabled, you must call controls.update() in your animation loop\n\tthis.enableDamping = false;\n\tthis.dampingFactor = 0.05;\n\n\t// This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n\t// Set to false to disable zooming\n\tthis.enableZoom = true;\n\tthis.zoomSpeed = 1.0;\n\n\t// Set to false to disable rotating\n\tthis.enableRotate = true;\n\tthis.rotateSpeed = 1.0;\n\n\t// Set to false to disable panning\n\tthis.enablePan = true;\n\tthis.panSpeed = 1.0;\n\tthis.screenSpacePanning = false; // if true, pan in screen-space\n\tthis.keyPanSpeed = 7.0;\t// pixels moved per arrow key push\n\n\t// Set to true to automatically rotate around the target\n\t// If auto-rotate is enabled, you must call controls.update() in your animation loop\n\tthis.autoRotate = false;\n\tthis.autoRotateSpeed = 2.0; // 30 seconds per round when fps is 60\n\n\t// Set to false to disable use of the keys\n\tthis.enableKeys = true;\n\n\t// The four arrow keys\n\tthis.keys = { LEFT: 37, UP: 38, RIGHT: 39, BOTTOM: 40 };\n\n\t// Mouse buttons\n\tthis.mouseButtons = { LEFT: MOUSE.ROTATE, MIDDLE: MOUSE.DOLLY, RIGHT: MOUSE.PAN };\n\n\t// Touch fingers\n\tthis.touches = { ONE: TOUCH.ROTATE, TWO: TOUCH.DOLLY_PAN };\n\n\t// for reset\n\tthis.target0 = this.target.clone();\n\tthis.position0 = this.object.position.clone();\n\tthis.zoom0 = this.object.zoom;\n\n\t//\n\t// public methods\n\t//\n\n\tthis.getPolarAngle = function () {\n\n\t\treturn spherical.phi;\n\n\t};\n\n\tthis.getAzimuthalAngle = function () {\n\n\t\treturn spherical.theta;\n\n\t};\n\n\tthis.saveState = function () {\n\n\t\tscope.target0.copy( scope.target );\n\t\tscope.position0.copy( scope.object.position );\n\t\tscope.zoom0 = scope.object.zoom;\n\n\t};\n\n\tthis.reset = function () {\n\n\t\tscope.target.copy( scope.target0 );\n\t\tscope.object.position.copy( scope.position0 );\n\t\tscope.object.zoom = scope.zoom0;\n\n\t\tscope.object.updateProjectionMatrix();\n\t\tscope.dispatchEvent( changeEvent );\n\n\t\tscope.update();\n\n\t\tstate = STATE.NONE;\n\n\t};\n\n\t// this method is exposed, but perhaps it would be better if we can make it private...\n\tthis.update = function () {\n\n\t\tvar offset = new Vector3();\n\n\t\t// so camera.up is the orbit axis\n\t\tvar quat = new Quaternion().setFromUnitVectors( object.up, new Vector3( 0, 1, 0 ) );\n\t\tvar quatInverse = quat.clone().inverse();\n\n\t\tvar lastPosition = new Vector3();\n\t\tvar lastQuaternion = new Quaternion();\n\n\t\treturn function update() {\n\n\t\t\tvar position = scope.object.position;\n\n\t\t\toffset.copy( position ).sub( scope.target );\n\n\t\t\t// rotate offset to \"y-axis-is-up\" space\n\t\t\toffset.applyQuaternion( quat );\n\n\t\t\t// angle from z-axis around y-axis\n\t\t\tspherical.setFromVector3( offset );\n\n\t\t\tif ( scope.autoRotate && state === STATE.NONE ) {\n\n\t\t\t\trotateLeft( getAutoRotationAngle() );\n\n\t\t\t}\n\n\t\t\tif ( scope.enableDamping ) {\n\n\t\t\t\tspherical.theta += sphericalDelta.theta * scope.dampingFactor;\n\t\t\t\tspherical.phi += sphericalDelta.phi * scope.dampingFactor;\n\n\t\t\t} else {\n\n\t\t\t\tspherical.theta += sphericalDelta.theta;\n\t\t\t\tspherical.phi += sphericalDelta.phi;\n\n\t\t\t}\n\n\t\t\t// restrict theta to be between desired limits\n\t\t\tspherical.theta = Math.max( scope.minAzimuthAngle, Math.min( scope.maxAzimuthAngle, spherical.theta ) );\n\n\t\t\t// restrict phi to be between desired limits\n\t\t\tspherical.phi = Math.max( scope.minPolarAngle, Math.min( scope.maxPolarAngle, spherical.phi ) );\n\n\t\t\tspherical.makeSafe();\n\n\n\t\t\tspherical.radius *= scale;\n\n\t\t\t// restrict radius to be between desired limits\n\t\t\tspherical.radius = Math.max( scope.minDistance, Math.min( scope.maxDistance, spherical.radius ) );\n\n\t\t\t// move target to panned location\n\n\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\tscope.target.addScaledVector( panOffset, scope.dampingFactor );\n\n\t\t\t} else {\n\n\t\t\t\tscope.target.add( panOffset );\n\n\t\t\t}\n\n\t\t\toffset.setFromSpherical( spherical );\n\n\t\t\t// rotate offset back to \"camera-up-vector-is-up\" space\n\t\t\toffset.applyQuaternion( quatInverse );\n\n\t\t\tposition.copy( scope.target ).add( offset );\n\n\t\t\tscope.object.lookAt( scope.target );\n\n\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\tsphericalDelta.theta *= ( 1 - scope.dampingFactor );\n\t\t\t\tsphericalDelta.phi *= ( 1 - scope.dampingFactor );\n\n\t\t\t\tpanOffset.multiplyScalar( 1 - scope.dampingFactor );\n\n\t\t\t} else {\n\n\t\t\t\tsphericalDelta.set( 0, 0, 0 );\n\n\t\t\t\tpanOffset.set( 0, 0, 0 );\n\n\t\t\t}\n\n\t\t\tscale = 1;\n\n\t\t\t// update condition is:\n\t\t\t// min(camera displacement, camera rotation in radians)^2 > EPS\n\t\t\t// using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n\t\t\tif ( zoomChanged ||\n\t\t\t\tlastPosition.distanceToSquared( scope.object.position ) > EPS ||\n\t\t\t\t8 * ( 1 - lastQuaternion.dot( scope.object.quaternion ) ) > EPS ) {\n\n\t\t\t\tscope.dispatchEvent( changeEvent );\n\n\t\t\t\tlastPosition.copy( scope.object.position );\n\t\t\t\tlastQuaternion.copy( scope.object.quaternion );\n\t\t\t\tzoomChanged = false;\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\t\t\treturn false;\n\n\t\t};\n\n\t}();\n\n\tthis.dispose = function () {\n\n\t\tscope.domElement.removeEventListener( 'contextmenu', onContextMenu, false );\n\t\tscope.domElement.removeEventListener( 'mousedown', onMouseDown, false );\n\t\tscope.domElement.removeEventListener( 'wheel', onMouseWheel, false );\n\n\t\tscope.domElement.removeEventListener( 'touchstart', onTouchStart, false );\n\t\tscope.domElement.removeEventListener( 'touchend', onTouchEnd, false );\n\t\tscope.domElement.removeEventListener( 'touchmove', onTouchMove, false );\n\n\t\tdocument.removeEventListener( 'mousemove', onMouseMove, false );\n\t\tdocument.removeEventListener( 'mouseup', onMouseUp, false );\n\n\t\tscope.domElement.removeEventListener( 'keydown', onKeyDown, false );\n\n\t\t//scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n\n\t};\n\n\t//\n\t// internals\n\t//\n\n\tvar scope = this;\n\n\tvar changeEvent = { type: 'change' };\n\tvar startEvent = { type: 'start' };\n\tvar endEvent = { type: 'end' };\n\n\tvar STATE = {\n\t\tNONE: - 1,\n\t\tROTATE: 0,\n\t\tDOLLY: 1,\n\t\tPAN: 2,\n\t\tTOUCH_ROTATE: 3,\n\t\tTOUCH_PAN: 4,\n\t\tTOUCH_DOLLY_PAN: 5,\n\t\tTOUCH_DOLLY_ROTATE: 6\n\t};\n\n\tvar state = STATE.NONE;\n\n\tvar EPS = 0.000001;\n\n\t// current position in spherical coordinates\n\tvar spherical = new Spherical();\n\tvar sphericalDelta = new Spherical();\n\n\tvar scale = 1;\n\tvar panOffset = new Vector3();\n\tvar zoomChanged = false;\n\n\tvar rotateStart = new Vector2();\n\tvar rotateEnd = new Vector2();\n\tvar rotateDelta = new Vector2();\n\n\tvar panStart = new Vector2();\n\tvar panEnd = new Vector2();\n\tvar panDelta = new Vector2();\n\n\tvar dollyStart = new Vector2();\n\tvar dollyEnd = new Vector2();\n\tvar dollyDelta = new Vector2();\n\n\tfunction getAutoRotationAngle() {\n\n\t\treturn 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n\n\t}\n\n\tfunction getZoomScale() {\n\n\t\treturn Math.pow( 0.95, scope.zoomSpeed );\n\n\t}\n\n\tfunction rotateLeft( angle ) {\n\n\t\tsphericalDelta.theta -= angle;\n\n\t}\n\n\tfunction rotateUp( angle ) {\n\n\t\tsphericalDelta.phi -= angle;\n\n\t}\n\n\tvar panLeft = function () {\n\n\t\tvar v = new Vector3();\n\n\t\treturn function panLeft( distance, objectMatrix ) {\n\n\t\t\tv.setFromMatrixColumn( objectMatrix, 0 ); // get X column of objectMatrix\n\t\t\tv.multiplyScalar( - distance );\n\n\t\t\tpanOffset.add( v );\n\n\t\t};\n\n\t}();\n\n\tvar panUp = function () {\n\n\t\tvar v = new Vector3();\n\n\t\treturn function panUp( distance, objectMatrix ) {\n\n\t\t\tif ( scope.screenSpacePanning === true ) {\n\n\t\t\t\tv.setFromMatrixColumn( objectMatrix, 1 );\n\n\t\t\t} else {\n\n\t\t\t\tv.setFromMatrixColumn( objectMatrix, 0 );\n\t\t\t\tv.crossVectors( scope.object.up, v );\n\n\t\t\t}\n\n\t\t\tv.multiplyScalar( distance );\n\n\t\t\tpanOffset.add( v );\n\n\t\t};\n\n\t}();\n\n\t// deltaX and deltaY are in pixels; right and down are positive\n\tvar pan = function () {\n\n\t\tvar offset = new Vector3();\n\n\t\treturn function pan( deltaX, deltaY ) {\n\n\t\t\tvar element = scope.domElement;\n\n\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\t// perspective\n\t\t\t\tvar position = scope.object.position;\n\t\t\t\toffset.copy( position ).sub( scope.target );\n\t\t\t\tvar targetDistance = offset.length();\n\n\t\t\t\t// half of the fov is center to top of screen\n\t\t\t\ttargetDistance *= Math.tan( ( scope.object.fov / 2 ) * Math.PI / 180.0 );\n\n\t\t\t\t// we use only clientHeight here so aspect ratio does not distort speed\n\t\t\t\tpanLeft( 2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix );\n\t\t\t\tpanUp( 2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix );\n\n\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\t// orthographic\n\t\t\t\tpanLeft( deltaX * ( scope.object.right - scope.object.left ) / scope.object.zoom / element.clientWidth, scope.object.matrix );\n\t\t\t\tpanUp( deltaY * ( scope.object.top - scope.object.bottom ) / scope.object.zoom / element.clientHeight, scope.object.matrix );\n\n\t\t\t} else {\n\n\t\t\t\t// camera neither orthographic nor perspective\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.' );\n\t\t\t\tscope.enablePan = false;\n\n\t\t\t}\n\n\t\t};\n\n\t}();\n\n\tfunction dollyOut( dollyScale ) {\n\n\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\tscale /= dollyScale;\n\n\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom * dollyScale ) );\n\t\t\tscope.object.updateProjectionMatrix();\n\t\t\tzoomChanged = true;\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\tscope.enableZoom = false;\n\n\t\t}\n\n\t}\n\n\tfunction dollyIn( dollyScale ) {\n\n\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\tscale *= dollyScale;\n\n\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom / dollyScale ) );\n\t\t\tscope.object.updateProjectionMatrix();\n\t\t\tzoomChanged = true;\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\tscope.enableZoom = false;\n\n\t\t}\n\n\t}\n\n\t//\n\t// event callbacks - update the object state\n\t//\n\n\tfunction handleMouseDownRotate( event ) {\n\n\t\trotateStart.set( event.clientX, event.clientY );\n\n\t}\n\n\tfunction handleMouseDownDolly( event ) {\n\n\t\tdollyStart.set( event.clientX, event.clientY );\n\n\t}\n\n\tfunction handleMouseDownPan( event ) {\n\n\t\tpanStart.set( event.clientX, event.clientY );\n\n\t}\n\n\tfunction handleMouseMoveRotate( event ) {\n\n\t\trotateEnd.set( event.clientX, event.clientY );\n\n\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\tvar element = scope.domElement;\n\n\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\trotateStart.copy( rotateEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleMouseMoveDolly( event ) {\n\n\t\tdollyEnd.set( event.clientX, event.clientY );\n\n\t\tdollyDelta.subVectors( dollyEnd, dollyStart );\n\n\t\tif ( dollyDelta.y > 0 ) {\n\n\t\t\tdollyOut( getZoomScale() );\n\n\t\t} else if ( dollyDelta.y < 0 ) {\n\n\t\t\tdollyIn( getZoomScale() );\n\n\t\t}\n\n\t\tdollyStart.copy( dollyEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleMouseMovePan( event ) {\n\n\t\tpanEnd.set( event.clientX, event.clientY );\n\n\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\tpan( panDelta.x, panDelta.y );\n\n\t\tpanStart.copy( panEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleMouseUp( /*event*/ ) {\n\n\t\t// no-op\n\n\t}\n\n\tfunction handleMouseWheel( event ) {\n\n\t\tif ( event.deltaY < 0 ) {\n\n\t\t\tdollyIn( getZoomScale() );\n\n\t\t} else if ( event.deltaY > 0 ) {\n\n\t\t\tdollyOut( getZoomScale() );\n\n\t\t}\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleKeyDown( event ) {\n\n\t\tvar needsUpdate = false;\n\n\t\tswitch ( event.keyCode ) {\n\n\t\t\tcase scope.keys.UP:\n\t\t\t\tpan( 0, scope.keyPanSpeed );\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t\tcase scope.keys.BOTTOM:\n\t\t\t\tpan( 0, - scope.keyPanSpeed );\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t\tcase scope.keys.LEFT:\n\t\t\t\tpan( scope.keyPanSpeed, 0 );\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t\tcase scope.keys.RIGHT:\n\t\t\t\tpan( - scope.keyPanSpeed, 0 );\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( needsUpdate ) {\n\n\t\t\t// prevent the browser from scrolling on cursor keys\n\t\t\tevent.preventDefault();\n\n\t\t\tscope.update();\n\n\t\t}\n\n\n\t}\n\n\tfunction handleTouchStartRotate( event ) {\n\n\t\tif ( event.touches.length == 1 ) {\n\n\t\t\trotateStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t\t} else {\n\n\t\t\tvar x = 0.5 * ( event.touches[ 0 ].pageX + event.touches[ 1 ].pageX );\n\t\t\tvar y = 0.5 * ( event.touches[ 0 ].pageY + event.touches[ 1 ].pageY );\n\n\t\t\trotateStart.set( x, y );\n\n\t\t}\n\n\t}\n\n\tfunction handleTouchStartPan( event ) {\n\n\t\tif ( event.touches.length == 1 ) {\n\n\t\t\tpanStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t\t} else {\n\n\t\t\tvar x = 0.5 * ( event.touches[ 0 ].pageX + event.touches[ 1 ].pageX );\n\t\t\tvar y = 0.5 * ( event.touches[ 0 ].pageY + event.touches[ 1 ].pageY );\n\n\t\t\tpanStart.set( x, y );\n\n\t\t}\n\n\t}\n\n\tfunction handleTouchStartDolly( event ) {\n\n\t\tvar dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n\t\tvar dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\n\t\tvar distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\tdollyStart.set( 0, distance );\n\n\t}\n\n\tfunction handleTouchStartDollyPan( event ) {\n\n\t\tif ( scope.enableZoom ) handleTouchStartDolly( event );\n\n\t\tif ( scope.enablePan ) handleTouchStartPan( event );\n\n\t}\n\n\tfunction handleTouchStartDollyRotate( event ) {\n\n\t\tif ( scope.enableZoom ) handleTouchStartDolly( event );\n\n\t\tif ( scope.enableRotate ) handleTouchStartRotate( event );\n\n\t}\n\n\tfunction handleTouchMoveRotate( event ) {\n\n\t\tif ( event.touches.length == 1 ) {\n\n\t\t\trotateEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t\t} else {\n\n\t\t\tvar x = 0.5 * ( event.touches[ 0 ].pageX + event.touches[ 1 ].pageX );\n\t\t\tvar y = 0.5 * ( event.touches[ 0 ].pageY + event.touches[ 1 ].pageY );\n\n\t\t\trotateEnd.set( x, y );\n\n\t\t}\n\n\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\tvar element = scope.domElement;\n\n\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\trotateStart.copy( rotateEnd );\n\n\t}\n\n\tfunction handleTouchMovePan( event ) {\n\n\t\tif ( event.touches.length == 1 ) {\n\n\t\t\tpanEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t\t} else {\n\n\t\t\tvar x = 0.5 * ( event.touches[ 0 ].pageX + event.touches[ 1 ].pageX );\n\t\t\tvar y = 0.5 * ( event.touches[ 0 ].pageY + event.touches[ 1 ].pageY );\n\n\t\t\tpanEnd.set( x, y );\n\n\t\t}\n\n\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\tpan( panDelta.x, panDelta.y );\n\n\t\tpanStart.copy( panEnd );\n\n\t}\n\n\tfunction handleTouchMoveDolly( event ) {\n\n\t\tvar dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n\t\tvar dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\n\t\tvar distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\tdollyEnd.set( 0, distance );\n\n\t\tdollyDelta.set( 0, Math.pow( dollyEnd.y / dollyStart.y, scope.zoomSpeed ) );\n\n\t\tdollyOut( dollyDelta.y );\n\n\t\tdollyStart.copy( dollyEnd );\n\n\t}\n\n\tfunction handleTouchMoveDollyPan( event ) {\n\n\t\tif ( scope.enableZoom ) handleTouchMoveDolly( event );\n\n\t\tif ( scope.enablePan ) handleTouchMovePan( event );\n\n\t}\n\n\tfunction handleTouchMoveDollyRotate( event ) {\n\n\t\tif ( scope.enableZoom ) handleTouchMoveDolly( event );\n\n\t\tif ( scope.enableRotate ) handleTouchMoveRotate( event );\n\n\t}\n\n\tfunction handleTouchEnd( /*event*/ ) {\n\n\t\t// no-op\n\n\t}\n\n\t//\n\t// event handlers - FSM: listen for events and reset state\n\t//\n\n\tfunction onMouseDown( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\t// Prevent the browser from scrolling.\n\t\tevent.preventDefault();\n\n\t\t// Manually set the focus since calling preventDefault above\n\t\t// prevents the browser from setting it automatically.\n\n\t\tscope.domElement.focus ? scope.domElement.focus() : window.focus();\n\n\t\tvar mouseAction;\n\n\t\tswitch ( event.button ) {\n\n\t\t\tcase 0:\n\n\t\t\t\tmouseAction = scope.mouseButtons.LEFT;\n\t\t\t\tbreak;\n\n\t\t\tcase 1:\n\n\t\t\t\tmouseAction = scope.mouseButtons.MIDDLE;\n\t\t\t\tbreak;\n\n\t\t\tcase 2:\n\n\t\t\t\tmouseAction = scope.mouseButtons.RIGHT;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tmouseAction = - 1;\n\n\t\t}\n\n\t\tswitch ( mouseAction ) {\n\n\t\t\tcase MOUSE.DOLLY:\n\n\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\thandleMouseDownDolly( event );\n\n\t\t\t\tstate = STATE.DOLLY;\n\n\t\t\t\tbreak;\n\n\t\t\tcase MOUSE.ROTATE:\n\n\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase MOUSE.PAN:\n\n\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t\tif ( state !== STATE.NONE ) {\n\n\t\t\tdocument.addEventListener( 'mousemove', onMouseMove, false );\n\t\t\tdocument.addEventListener( 'mouseup', onMouseUp, false );\n\n\t\t\tscope.dispatchEvent( startEvent );\n\n\t\t}\n\n\t}\n\n\tfunction onMouseMove( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\n\t\tswitch ( state ) {\n\n\t\t\tcase STATE.ROTATE:\n\n\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\thandleMouseMoveRotate( event );\n\n\t\t\t\tbreak;\n\n\t\t\tcase STATE.DOLLY:\n\n\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\thandleMouseMoveDolly( event );\n\n\t\t\t\tbreak;\n\n\t\t\tcase STATE.PAN:\n\n\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\thandleMouseMovePan( event );\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tfunction onMouseUp( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\thandleMouseUp( event );\n\n\t\tdocument.removeEventListener( 'mousemove', onMouseMove, false );\n\t\tdocument.removeEventListener( 'mouseup', onMouseUp, false );\n\n\t\tscope.dispatchEvent( endEvent );\n\n\t\tstate = STATE.NONE;\n\n\t}\n\n\tfunction onMouseWheel( event ) {\n\n\t\tif ( scope.enabled === false || scope.enableZoom === false || ( state !== STATE.NONE && state !== STATE.ROTATE ) ) return;\n\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\n\t\tscope.dispatchEvent( startEvent );\n\n\t\thandleMouseWheel( event );\n\n\t\tscope.dispatchEvent( endEvent );\n\n\t}\n\n\tfunction onKeyDown( event ) {\n\n\t\tif ( scope.enabled === false || scope.enableKeys === false || scope.enablePan === false ) return;\n\n\t\thandleKeyDown( event );\n\n\t}\n\n\tfunction onTouchStart( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault(); // prevent scrolling\n\n\t\tswitch ( event.touches.length ) {\n\n\t\t\tcase 1:\n\n\t\t\t\tswitch ( scope.touches.ONE ) {\n\n\t\t\t\t\tcase TOUCH.ROTATE:\n\n\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\thandleTouchStartRotate( event );\n\n\t\t\t\t\t\tstate = STATE.TOUCH_ROTATE;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase TOUCH.PAN:\n\n\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\thandleTouchStartPan( event );\n\n\t\t\t\t\t\tstate = STATE.TOUCH_PAN;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 2:\n\n\t\t\t\tswitch ( scope.touches.TWO ) {\n\n\t\t\t\t\tcase TOUCH.DOLLY_PAN:\n\n\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\n\t\t\t\t\t\thandleTouchStartDollyPan( event );\n\n\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY_PAN;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase TOUCH.DOLLY_ROTATE:\n\n\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enableRotate === false ) return;\n\n\t\t\t\t\t\thandleTouchStartDollyRotate( event );\n\n\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY_ROTATE;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t\tif ( state !== STATE.NONE ) {\n\n\t\t\tscope.dispatchEvent( startEvent );\n\n\t\t}\n\n\t}\n\n\tfunction onTouchMove( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault(); // prevent scrolling\n\t\tevent.stopPropagation();\n\n\t\tswitch ( state ) {\n\n\t\t\tcase STATE.TOUCH_ROTATE:\n\n\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\thandleTouchMoveRotate( event );\n\n\t\t\t\tscope.update();\n\n\t\t\t\tbreak;\n\n\t\t\tcase STATE.TOUCH_PAN:\n\n\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\thandleTouchMovePan( event );\n\n\t\t\t\tscope.update();\n\n\t\t\t\tbreak;\n\n\t\t\tcase STATE.TOUCH_DOLLY_PAN:\n\n\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\n\t\t\t\thandleTouchMoveDollyPan( event );\n\n\t\t\t\tscope.update();\n\n\t\t\t\tbreak;\n\n\t\t\tcase STATE.TOUCH_DOLLY_ROTATE:\n\n\t\t\t\tif ( scope.enableZoom === false && scope.enableRotate === false ) return;\n\n\t\t\t\thandleTouchMoveDollyRotate( event );\n\n\t\t\t\tscope.update();\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t}\n\n\tfunction onTouchEnd( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\thandleTouchEnd( event );\n\n\t\tscope.dispatchEvent( endEvent );\n\n\t\tstate = STATE.NONE;\n\n\t}\n\n\tfunction onContextMenu( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\n\t}\n\n\t//\n\n\tscope.domElement.addEventListener( 'contextmenu', onContextMenu, false );\n\n\tscope.domElement.addEventListener( 'mousedown', onMouseDown, false );\n\tscope.domElement.addEventListener( 'wheel', onMouseWheel, false );\n\n\tscope.domElement.addEventListener( 'touchstart', onTouchStart, false );\n\tscope.domElement.addEventListener( 'touchend', onTouchEnd, false );\n\tscope.domElement.addEventListener( 'touchmove', onTouchMove, false );\n\n\tscope.domElement.addEventListener( 'keydown', onKeyDown, false );\n\n\t// make sure element can receive keys.\n\n\tif ( scope.domElement.tabIndex === - 1 ) {\n\n\t\tscope.domElement.tabIndex = 0;\n\n\t}\n\n\t// force an update at start\n\n\tthis.update();\n\n};\n\nOrbitControls.prototype = Object.create( EventDispatcher.prototype );\nOrbitControls.prototype.constructor = OrbitControls;\n\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n// This is very similar to OrbitControls, another set of touch behavior\n//\n//    Orbit - right mouse, or left mouse + ctrl/meta/shiftKey / touch: two-finger rotate\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - left mouse, or arrow keys / touch: one-finger move\n\nvar MapControls = function ( object, domElement ) {\n\n\tOrbitControls.call( this, object, domElement );\n\n\tthis.mouseButtons.LEFT = MOUSE.PAN;\n\tthis.mouseButtons.RIGHT = MOUSE.ROTATE;\n\n\tthis.touches.ONE = TOUCH.PAN;\n\tthis.touches.TWO = TOUCH.DOLLY_ROTATE;\n\n};\n\nMapControls.prototype = Object.create( EventDispatcher.prototype );\nMapControls.prototype.constructor = MapControls;\n\nexport { OrbitControls, MapControls };\n","/**\n * @author alteredq / http://alteredqualia.com/\n */\n\n\nimport { Pass } from \"../postprocessing/Pass.js\";\n\nvar RenderPass = function ( scene, camera, overrideMaterial, clearColor, clearAlpha ) {\n\n\tPass.call( this );\n\n\tthis.scene = scene;\n\tthis.camera = camera;\n\n\tthis.overrideMaterial = overrideMaterial;\n\n\tthis.clearColor = clearColor;\n\tthis.clearAlpha = ( clearAlpha !== undefined ) ? clearAlpha : 0;\n\n\tthis.clear = true;\n\tthis.clearDepth = false;\n\tthis.needsSwap = false;\n\n};\n\nRenderPass.prototype = Object.assign( Object.create( Pass.prototype ), {\n\n\tconstructor: RenderPass,\n\n\trender: function ( renderer, writeBuffer, readBuffer /*, deltaTime, maskActive */ ) {\n\n\t\tvar oldAutoClear = renderer.autoClear;\n\t\trenderer.autoClear = false;\n\n\t\tvar oldClearColor, oldClearAlpha, oldOverrideMaterial;\n\n\t\tif ( this.overrideMaterial !== undefined ) {\n\n\t\t\toldOverrideMaterial = this.scene.overrideMaterial;\n\n\t\t\tthis.scene.overrideMaterial = this.overrideMaterial;\n\n\t\t}\n\n\t\tif ( this.clearColor ) {\n\n\t\t\toldClearColor = renderer.getClearColor().getHex();\n\t\t\toldClearAlpha = renderer.getClearAlpha();\n\n\t\t\trenderer.setClearColor( this.clearColor, this.clearAlpha );\n\n\t\t}\n\n\t\tif ( this.clearDepth ) {\n\n\t\t\trenderer.clearDepth();\n\n\t\t}\n\n\t\trenderer.setRenderTarget( this.renderToScreen ? null : readBuffer );\n\n\t\t// TODO: Avoid using autoClear properties, see https://github.com/mrdoob/three.js/pull/15571#issuecomment-465669600\n\t\tif ( this.clear ) renderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\n\t\trenderer.render( this.scene, this.camera );\n\n\t\tif ( this.clearColor ) {\n\n\t\t\trenderer.setClearColor( oldClearColor, oldClearAlpha );\n\n\t\t}\n\n\t\tif ( this.overrideMaterial !== undefined ) {\n\n\t\t\tthis.scene.overrideMaterial = oldOverrideMaterial;\n\n\t\t}\n\n\t\trenderer.autoClear = oldAutoClear;\n\n\t}\n\n} );\n\nexport { RenderPass };\n","/**\n * @author bhouston / http://clara.io/\n *\n * Luminosity\n * http://en.wikipedia.org/wiki/Luminosity\n */\n\nimport {\n\tColor\n} from \"../../../build/three.module.js\";\n\nvar LuminosityHighPassShader = {\n\n\tshaderID: \"luminosityHighPass\",\n\n\tuniforms: {\n\n\t\t\"tDiffuse\": { value: null },\n\t\t\"luminosityThreshold\": { value: 1.0 },\n\t\t\"smoothWidth\": { value: 1.0 },\n\t\t\"defaultColor\": { value: new Color( 0x000000 ) },\n\t\t\"defaultOpacity\": { value: 0.0 }\n\n\t},\n\n\tvertexShader: [\n\n\t\t\"varying vec2 vUv;\",\n\n\t\t\"void main() {\",\n\n\t\t\"\tvUv = uv;\",\n\n\t\t\"\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\n\t\t\"}\"\n\n\t].join( \"\\n\" ),\n\n\tfragmentShader: [\n\n\t\t\"uniform sampler2D tDiffuse;\",\n\t\t\"uniform vec3 defaultColor;\",\n\t\t\"uniform float defaultOpacity;\",\n\t\t\"uniform float luminosityThreshold;\",\n\t\t\"uniform float smoothWidth;\",\n\n\t\t\"varying vec2 vUv;\",\n\n\t\t\"void main() {\",\n\n\t\t\"\tvec4 texel = texture2D( tDiffuse, vUv );\",\n\n\t\t\"\tvec3 luma = vec3( 0.299, 0.587, 0.114 );\",\n\n\t\t\"\tfloat v = dot( texel.xyz, luma );\",\n\n\t\t\"\tvec4 outputColor = vec4( defaultColor.rgb, defaultOpacity );\",\n\n\t\t\"\tfloat alpha = smoothstep( luminosityThreshold, luminosityThreshold + smoothWidth, v );\",\n\n\t\t\"\tgl_FragColor = mix( outputColor, texel, alpha );\",\n\n\t\t\"}\"\n\n\t].join( \"\\n\" )\n\n};\n\nexport { LuminosityHighPassShader };\n","/**\n * @author spidersharma / http://eduperiment.com/\n */\n\nimport {\n\tAdditiveBlending,\n\tColor,\n\tLinearFilter,\n\tMeshBasicMaterial,\n\tRGBAFormat,\n\tShaderMaterial,\n\tUniformsUtils,\n\tVector2,\n\tVector3,\n\tWebGLRenderTarget\n} from \"../../../build/three.module.js\";\nimport { Pass } from \"../postprocessing/Pass.js\";\nimport { CopyShader } from \"../shaders/CopyShader.js\";\nimport { LuminosityHighPassShader } from \"../shaders/LuminosityHighPassShader.js\";\n\n/**\n * UnrealBloomPass is inspired by the bloom pass of Unreal Engine. It creates a\n * mip map chain of bloom textures and blurs them with different radii. Because\n * of the weighted combination of mips, and because larger blurs are done on\n * higher mips, this effect provides good quality and performance.\n *\n * Reference:\n * - https://docs.unrealengine.com/latest/INT/Engine/Rendering/PostProcessEffects/Bloom/\n */\nvar UnrealBloomPass = function ( resolution, strength, radius, threshold ) {\n\n\tPass.call( this );\n\n\tthis.strength = ( strength !== undefined ) ? strength : 1;\n\tthis.radius = radius;\n\tthis.threshold = threshold;\n\tthis.resolution = ( resolution !== undefined ) ? new Vector2( resolution.x, resolution.y ) : new Vector2( 256, 256 );\n\n\t// create color only once here, reuse it later inside the render function\n\tthis.clearColor = new Color( 0, 0, 0 );\n\n\t// render targets\n\tvar pars = { minFilter: LinearFilter, magFilter: LinearFilter, format: RGBAFormat };\n\tthis.renderTargetsHorizontal = [];\n\tthis.renderTargetsVertical = [];\n\tthis.nMips = 5;\n\tvar resx = Math.round( this.resolution.x / 2 );\n\tvar resy = Math.round( this.resolution.y / 2 );\n\n\tthis.renderTargetBright = new WebGLRenderTarget( resx, resy, pars );\n\tthis.renderTargetBright.texture.name = \"UnrealBloomPass.bright\";\n\tthis.renderTargetBright.texture.generateMipmaps = false;\n\n\tfor ( var i = 0; i < this.nMips; i ++ ) {\n\n\t\tvar renderTargetHorizonal = new WebGLRenderTarget( resx, resy, pars );\n\n\t\trenderTargetHorizonal.texture.name = \"UnrealBloomPass.h\" + i;\n\t\trenderTargetHorizonal.texture.generateMipmaps = false;\n\n\t\tthis.renderTargetsHorizontal.push( renderTargetHorizonal );\n\n\t\tvar renderTargetVertical = new WebGLRenderTarget( resx, resy, pars );\n\n\t\trenderTargetVertical.texture.name = \"UnrealBloomPass.v\" + i;\n\t\trenderTargetVertical.texture.generateMipmaps = false;\n\n\t\tthis.renderTargetsVertical.push( renderTargetVertical );\n\n\t\tresx = Math.round( resx / 2 );\n\n\t\tresy = Math.round( resy / 2 );\n\n\t}\n\n\t// luminosity high pass material\n\n\tif ( LuminosityHighPassShader === undefined )\n\t\tconsole.error( \"UnrealBloomPass relies on LuminosityHighPassShader\" );\n\n\tvar highPassShader = LuminosityHighPassShader;\n\tthis.highPassUniforms = UniformsUtils.clone( highPassShader.uniforms );\n\n\tthis.highPassUniforms[ \"luminosityThreshold\" ].value = threshold;\n\tthis.highPassUniforms[ \"smoothWidth\" ].value = 0.01;\n\n\tthis.materialHighPassFilter = new ShaderMaterial( {\n\t\tuniforms: this.highPassUniforms,\n\t\tvertexShader: highPassShader.vertexShader,\n\t\tfragmentShader: highPassShader.fragmentShader,\n\t\tdefines: {}\n\t} );\n\n\t// Gaussian Blur Materials\n\tthis.separableBlurMaterials = [];\n\tvar kernelSizeArray = [ 3, 5, 7, 9, 11 ];\n\tvar resx = Math.round( this.resolution.x / 2 );\n\tvar resy = Math.round( this.resolution.y / 2 );\n\n\tfor ( var i = 0; i < this.nMips; i ++ ) {\n\n\t\tthis.separableBlurMaterials.push( this.getSeperableBlurMaterial( kernelSizeArray[ i ] ) );\n\n\t\tthis.separableBlurMaterials[ i ].uniforms[ \"texSize\" ].value = new Vector2( resx, resy );\n\n\t\tresx = Math.round( resx / 2 );\n\n\t\tresy = Math.round( resy / 2 );\n\n\t}\n\n\t// Composite material\n\tthis.compositeMaterial = this.getCompositeMaterial( this.nMips );\n\tthis.compositeMaterial.uniforms[ \"blurTexture1\" ].value = this.renderTargetsVertical[ 0 ].texture;\n\tthis.compositeMaterial.uniforms[ \"blurTexture2\" ].value = this.renderTargetsVertical[ 1 ].texture;\n\tthis.compositeMaterial.uniforms[ \"blurTexture3\" ].value = this.renderTargetsVertical[ 2 ].texture;\n\tthis.compositeMaterial.uniforms[ \"blurTexture4\" ].value = this.renderTargetsVertical[ 3 ].texture;\n\tthis.compositeMaterial.uniforms[ \"blurTexture5\" ].value = this.renderTargetsVertical[ 4 ].texture;\n\tthis.compositeMaterial.uniforms[ \"bloomStrength\" ].value = strength;\n\tthis.compositeMaterial.uniforms[ \"bloomRadius\" ].value = 0.1;\n\tthis.compositeMaterial.needsUpdate = true;\n\n\tvar bloomFactors = [ 1.0, 0.8, 0.6, 0.4, 0.2 ];\n\tthis.compositeMaterial.uniforms[ \"bloomFactors\" ].value = bloomFactors;\n\tthis.bloomTintColors = [ new Vector3( 1, 1, 1 ), new Vector3( 1, 1, 1 ), new Vector3( 1, 1, 1 ),\n\t\t\t\t\t\t\t new Vector3( 1, 1, 1 ), new Vector3( 1, 1, 1 ) ];\n\tthis.compositeMaterial.uniforms[ \"bloomTintColors\" ].value = this.bloomTintColors;\n\n\t// copy material\n\tif ( CopyShader === undefined ) {\n\n\t\tconsole.error( \"UnrealBloomPass relies on CopyShader\" );\n\n\t}\n\n\tvar copyShader = CopyShader;\n\n\tthis.copyUniforms = UniformsUtils.clone( copyShader.uniforms );\n\tthis.copyUniforms[ \"opacity\" ].value = 1.0;\n\n\tthis.materialCopy = new ShaderMaterial( {\n\t\tuniforms: this.copyUniforms,\n\t\tvertexShader: copyShader.vertexShader,\n\t\tfragmentShader: copyShader.fragmentShader,\n\t\tblending: AdditiveBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false,\n\t\ttransparent: true\n\t} );\n\n\tthis.enabled = true;\n\tthis.needsSwap = false;\n\n\tthis.oldClearColor = new Color();\n\tthis.oldClearAlpha = 1;\n\n\tthis.basic = new MeshBasicMaterial();\n\n\tthis.fsQuad = new Pass.FullScreenQuad( null );\n\n};\n\nUnrealBloomPass.prototype = Object.assign( Object.create( Pass.prototype ), {\n\n\tconstructor: UnrealBloomPass,\n\n\tdispose: function () {\n\n\t\tfor ( var i = 0; i < this.renderTargetsHorizontal.length; i ++ ) {\n\n\t\t\tthis.renderTargetsHorizontal[ i ].dispose();\n\n\t\t}\n\n\t\tfor ( var i = 0; i < this.renderTargetsVertical.length; i ++ ) {\n\n\t\t\tthis.renderTargetsVertical[ i ].dispose();\n\n\t\t}\n\n\t\tthis.renderTargetBright.dispose();\n\n\t},\n\n\tsetSize: function ( width, height ) {\n\n\t\tvar resx = Math.round( width / 2 );\n\t\tvar resy = Math.round( height / 2 );\n\n\t\tthis.renderTargetBright.setSize( resx, resy );\n\n\t\tfor ( var i = 0; i < this.nMips; i ++ ) {\n\n\t\t\tthis.renderTargetsHorizontal[ i ].setSize( resx, resy );\n\t\t\tthis.renderTargetsVertical[ i ].setSize( resx, resy );\n\n\t\t\tthis.separableBlurMaterials[ i ].uniforms[ \"texSize\" ].value = new Vector2( resx, resy );\n\n\t\t\tresx = Math.round( resx / 2 );\n\t\t\tresy = Math.round( resy / 2 );\n\n\t\t}\n\n\t},\n\n\trender: function ( renderer, writeBuffer, readBuffer, deltaTime, maskActive ) {\n\n\t\tthis.oldClearColor.copy( renderer.getClearColor() );\n\t\tthis.oldClearAlpha = renderer.getClearAlpha();\n\t\tvar oldAutoClear = renderer.autoClear;\n\t\trenderer.autoClear = false;\n\n\t\trenderer.setClearColor( this.clearColor, 0 );\n\n\t\tif ( maskActive ) renderer.state.buffers.stencil.setTest( false );\n\n\t\t// Render input to screen\n\n\t\tif ( this.renderToScreen ) {\n\n\t\t\tthis.fsQuad.material = this.basic;\n\t\t\tthis.basic.map = readBuffer.texture;\n\n\t\t\trenderer.setRenderTarget( null );\n\t\t\trenderer.clear();\n\t\t\tthis.fsQuad.render( renderer );\n\n\t\t}\n\n\t\t// 1. Extract Bright Areas\n\n\t\tthis.highPassUniforms[ \"tDiffuse\" ].value = readBuffer.texture;\n\t\tthis.highPassUniforms[ \"luminosityThreshold\" ].value = this.threshold;\n\t\tthis.fsQuad.material = this.materialHighPassFilter;\n\n\t\trenderer.setRenderTarget( this.renderTargetBright );\n\t\trenderer.clear();\n\t\tthis.fsQuad.render( renderer );\n\n\t\t// 2. Blur All the mips progressively\n\n\t\tvar inputRenderTarget = this.renderTargetBright;\n\n\t\tfor ( var i = 0; i < this.nMips; i ++ ) {\n\n\t\t\tthis.fsQuad.material = this.separableBlurMaterials[ i ];\n\n\t\t\tthis.separableBlurMaterials[ i ].uniforms[ \"colorTexture\" ].value = inputRenderTarget.texture;\n\t\t\tthis.separableBlurMaterials[ i ].uniforms[ \"direction\" ].value = UnrealBloomPass.BlurDirectionX;\n\t\t\trenderer.setRenderTarget( this.renderTargetsHorizontal[ i ] );\n\t\t\trenderer.clear();\n\t\t\tthis.fsQuad.render( renderer );\n\n\t\t\tthis.separableBlurMaterials[ i ].uniforms[ \"colorTexture\" ].value = this.renderTargetsHorizontal[ i ].texture;\n\t\t\tthis.separableBlurMaterials[ i ].uniforms[ \"direction\" ].value = UnrealBloomPass.BlurDirectionY;\n\t\t\trenderer.setRenderTarget( this.renderTargetsVertical[ i ] );\n\t\t\trenderer.clear();\n\t\t\tthis.fsQuad.render( renderer );\n\n\t\t\tinputRenderTarget = this.renderTargetsVertical[ i ];\n\n\t\t}\n\n\t\t// Composite All the mips\n\n\t\tthis.fsQuad.material = this.compositeMaterial;\n\t\tthis.compositeMaterial.uniforms[ \"bloomStrength\" ].value = this.strength;\n\t\tthis.compositeMaterial.uniforms[ \"bloomRadius\" ].value = this.radius;\n\t\tthis.compositeMaterial.uniforms[ \"bloomTintColors\" ].value = this.bloomTintColors;\n\n\t\trenderer.setRenderTarget( this.renderTargetsHorizontal[ 0 ] );\n\t\trenderer.clear();\n\t\tthis.fsQuad.render( renderer );\n\n\t\t// Blend it additively over the input texture\n\n\t\tthis.fsQuad.material = this.materialCopy;\n\t\tthis.copyUniforms[ \"tDiffuse\" ].value = this.renderTargetsHorizontal[ 0 ].texture;\n\n\t\tif ( maskActive ) renderer.state.buffers.stencil.setTest( true );\n\n\t\tif ( this.renderToScreen ) {\n\n\t\t\trenderer.setRenderTarget( null );\n\t\t\tthis.fsQuad.render( renderer );\n\n\t\t} else {\n\n\t\t\trenderer.setRenderTarget( readBuffer );\n\t\t\tthis.fsQuad.render( renderer );\n\n\t\t}\n\n\t\t// Restore renderer settings\n\n\t\trenderer.setClearColor( this.oldClearColor, this.oldClearAlpha );\n\t\trenderer.autoClear = oldAutoClear;\n\n\t},\n\n\tgetSeperableBlurMaterial: function ( kernelRadius ) {\n\n\t\treturn new ShaderMaterial( {\n\n\t\t\tdefines: {\n\t\t\t\t\"KERNEL_RADIUS\": kernelRadius,\n\t\t\t\t\"SIGMA\": kernelRadius\n\t\t\t},\n\n\t\t\tuniforms: {\n\t\t\t\t\"colorTexture\": { value: null },\n\t\t\t\t\"texSize\": { value: new Vector2( 0.5, 0.5 ) },\n\t\t\t\t\"direction\": { value: new Vector2( 0.5, 0.5 ) }\n\t\t\t},\n\n\t\t\tvertexShader:\n\t\t\t\t\"varying vec2 vUv;\\n\\\n\t\t\t\tvoid main() {\\n\\\n\t\t\t\t\tvUv = uv;\\n\\\n\t\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n\\\n\t\t\t\t}\",\n\n\t\t\tfragmentShader:\n\t\t\t\t\"#include <common>\\\n\t\t\t\tvarying vec2 vUv;\\n\\\n\t\t\t\tuniform sampler2D colorTexture;\\n\\\n\t\t\t\tuniform vec2 texSize;\\\n\t\t\t\tuniform vec2 direction;\\\n\t\t\t\t\\\n\t\t\t\tfloat gaussianPdf(in float x, in float sigma) {\\\n\t\t\t\t\treturn 0.39894 * exp( -0.5 * x * x/( sigma * sigma))/sigma;\\\n\t\t\t\t}\\\n\t\t\t\tvoid main() {\\n\\\n\t\t\t\t\tvec2 invSize = 1.0 / texSize;\\\n\t\t\t\t\tfloat fSigma = float(SIGMA);\\\n\t\t\t\t\tfloat weightSum = gaussianPdf(0.0, fSigma);\\\n\t\t\t\t\tvec3 diffuseSum = texture2D( colorTexture, vUv).rgb * weightSum;\\\n\t\t\t\t\tfor( int i = 1; i < KERNEL_RADIUS; i ++ ) {\\\n\t\t\t\t\t\tfloat x = float(i);\\\n\t\t\t\t\t\tfloat w = gaussianPdf(x, fSigma);\\\n\t\t\t\t\t\tvec2 uvOffset = direction * invSize * x;\\\n\t\t\t\t\t\tvec3 sample1 = texture2D( colorTexture, vUv + uvOffset).rgb;\\\n\t\t\t\t\t\tvec3 sample2 = texture2D( colorTexture, vUv - uvOffset).rgb;\\\n\t\t\t\t\t\tdiffuseSum += (sample1 + sample2) * w;\\\n\t\t\t\t\t\tweightSum += 2.0 * w;\\\n\t\t\t\t\t}\\\n\t\t\t\t\tgl_FragColor = vec4(diffuseSum/weightSum, 1.0);\\n\\\n\t\t\t\t}\"\n\t\t} );\n\n\t},\n\n\tgetCompositeMaterial: function ( nMips ) {\n\n\t\treturn new ShaderMaterial( {\n\n\t\t\tdefines: {\n\t\t\t\t\"NUM_MIPS\": nMips\n\t\t\t},\n\n\t\t\tuniforms: {\n\t\t\t\t\"blurTexture1\": { value: null },\n\t\t\t\t\"blurTexture2\": { value: null },\n\t\t\t\t\"blurTexture3\": { value: null },\n\t\t\t\t\"blurTexture4\": { value: null },\n\t\t\t\t\"blurTexture5\": { value: null },\n\t\t\t\t\"dirtTexture\": { value: null },\n\t\t\t\t\"bloomStrength\": { value: 1.0 },\n\t\t\t\t\"bloomFactors\": { value: null },\n\t\t\t\t\"bloomTintColors\": { value: null },\n\t\t\t\t\"bloomRadius\": { value: 0.0 }\n\t\t\t},\n\n\t\t\tvertexShader:\n\t\t\t\t\"varying vec2 vUv;\\n\\\n\t\t\t\tvoid main() {\\n\\\n\t\t\t\t\tvUv = uv;\\n\\\n\t\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n\\\n\t\t\t\t}\",\n\n\t\t\tfragmentShader:\n\t\t\t\t\"varying vec2 vUv;\\\n\t\t\t\tuniform sampler2D blurTexture1;\\\n\t\t\t\tuniform sampler2D blurTexture2;\\\n\t\t\t\tuniform sampler2D blurTexture3;\\\n\t\t\t\tuniform sampler2D blurTexture4;\\\n\t\t\t\tuniform sampler2D blurTexture5;\\\n\t\t\t\tuniform sampler2D dirtTexture;\\\n\t\t\t\tuniform float bloomStrength;\\\n\t\t\t\tuniform float bloomRadius;\\\n\t\t\t\tuniform float bloomFactors[NUM_MIPS];\\\n\t\t\t\tuniform vec3 bloomTintColors[NUM_MIPS];\\\n\t\t\t\t\\\n\t\t\t\tfloat lerpBloomFactor(const in float factor) { \\\n\t\t\t\t\tfloat mirrorFactor = 1.2 - factor;\\\n\t\t\t\t\treturn mix(factor, mirrorFactor, bloomRadius);\\\n\t\t\t\t}\\\n\t\t\t\t\\\n\t\t\t\tvoid main() {\\\n\t\t\t\t\tgl_FragColor = bloomStrength * ( lerpBloomFactor(bloomFactors[0]) * vec4(bloomTintColors[0], 1.0) * texture2D(blurTexture1, vUv) + \\\n\t\t\t\t\t\t\t\t\t\t\t\t\t lerpBloomFactor(bloomFactors[1]) * vec4(bloomTintColors[1], 1.0) * texture2D(blurTexture2, vUv) + \\\n\t\t\t\t\t\t\t\t\t\t\t\t\t lerpBloomFactor(bloomFactors[2]) * vec4(bloomTintColors[2], 1.0) * texture2D(blurTexture3, vUv) + \\\n\t\t\t\t\t\t\t\t\t\t\t\t\t lerpBloomFactor(bloomFactors[3]) * vec4(bloomTintColors[3], 1.0) * texture2D(blurTexture4, vUv) + \\\n\t\t\t\t\t\t\t\t\t\t\t\t\t lerpBloomFactor(bloomFactors[4]) * vec4(bloomTintColors[4], 1.0) * texture2D(blurTexture5, vUv) );\\\n\t\t\t\t}\"\n\t\t} );\n\n\t}\n\n} );\n\nUnrealBloomPass.BlurDirectionX = new Vector2( 1.0, 0.0 );\nUnrealBloomPass.BlurDirectionY = new Vector2( 0.0, 1.0 );\n\nexport { UnrealBloomPass };\n","/**\n * @author alteredq / http://alteredqualia.com/\n *\n * Full-screen textured quad shader\n */\n\n\n\nvar CopyShader = {\n\n\tuniforms: {\n\n\t\t\"tDiffuse\": { value: null },\n\t\t\"opacity\": { value: 1.0 }\n\n\t},\n\n\tvertexShader: [\n\n\t\t\"varying vec2 vUv;\",\n\n\t\t\"void main() {\",\n\n\t\t\"\tvUv = uv;\",\n\t\t\"\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\n\t\t\"}\"\n\n\t].join( \"\\n\" ),\n\n\tfragmentShader: [\n\n\t\t\"uniform float opacity;\",\n\n\t\t\"uniform sampler2D tDiffuse;\",\n\n\t\t\"varying vec2 vUv;\",\n\n\t\t\"void main() {\",\n\n\t\t\"\tvec4 texel = texture2D( tDiffuse, vUv );\",\n\t\t\"\tgl_FragColor = opacity * texel;\",\n\n\t\t\"}\"\n\n\t].join( \"\\n\" )\n\n};\n\nexport { CopyShader };\n"],"sourceRoot":""}