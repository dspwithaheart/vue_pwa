{"version":3,"sources":["webpack:///./src/components/InteractivePoints.vue?1e31","webpack:///src/components/InteractivePoints.vue","webpack:///./src/components/InteractivePoints.vue?bc4f","webpack:///./src/components/InteractivePoints.vue"],"names":["camera","scene","renderer","plane","mouse","rollOverMesh","rollOverMaterial","cubeGeo","cubeMaterial","render","_vm","this","_h","$createElement","_c","_self","attrs","staticRenderFns","objects","name","computed","data","mounted","initScene","animate","methods","position","set","lookAt","background","rollOverGeo","color","opacity","transparent","add","map","gridHelper","raycaster","geometry","rotateX","Math","PI","push","ambientLight","directionalLight","normalize","setPixelRatio","window","devicePixelRatio","setSize","innerWidth","innerHeight","container","appendChild","domElement","document","addEventListener","onDocumentMouseMove","onDocumentMouseDown","onDocumentKeyDown","onDocumentKeyUp","onWindowResize","event","preventDefault","setFromCamera","intersects","intersectObjects","length","intersect","copy","point","face","normal","isShiftDown","object","remove","splice","indexOf","voxel","aspect","updateProjectionMatrix","component"],"mappings":"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","file":"js/interactivepoints.928fc8ab.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"container3\"}})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  \r\n    <!-- <img alt=\"Vue logo\" src=\"../assets/logo.png\"> -->\r\n    <div id=\"container3\"></div>\r\n  \r\n</template>\r\n\r\n\r\n<script>\r\nimport * as THREE from \"three\";\r\n\r\n// import Stats from \"three/examples/jsm/libs/stats.module.js\";\r\n// import { OrbitControls } from \"three/examples/jsm/controls/OrbitControls.js\";\r\n\r\nvar camera, scene, renderer;\r\nvar plane;\r\nvar mouse,\r\n  raycaster,\r\n  isShiftDown = false;\r\n\r\nvar rollOverMesh, rollOverMaterial;\r\nvar cubeGeo, cubeMaterial;\r\n\r\nvar objects = [];\r\nexport default {\r\n  name: \"InteractivePoints\",\r\n  computed: {},\r\n  data: function() {\r\n    return {};\r\n  },\r\n  mounted: function() {\r\n    this.initScene();\r\n    this.animate();\r\n  },\r\n  methods: {\r\n    initScene() {\r\n        var container = document.getElementById( 'container3' );\r\n\r\n      camera = new THREE.PerspectiveCamera(\r\n        45,\r\n        window.innerWidth / window.innerHeight,\r\n        1,\r\n        10000\r\n      );\r\n      camera.position.set(500, 800, 1300);\r\n      camera.lookAt(0, 0, 0);\r\n\r\n      scene = new THREE.Scene();\r\n      scene.background = new THREE.Color(0xf0f0f0);\r\n\r\n      // roll-over helpers\r\n\r\n      var rollOverGeo = new THREE.BoxBufferGeometry(50, 50, 50);\r\n      rollOverMaterial = new THREE.MeshBasicMaterial({\r\n        color: 0xff0000,\r\n        opacity: 0.5,\r\n        transparent: true\r\n      });\r\n      rollOverMesh = new THREE.Mesh(rollOverGeo, rollOverMaterial);\r\n      scene.add(rollOverMesh);\r\n\r\n      // cubes\r\n\r\n      cubeGeo = new THREE.BoxBufferGeometry(50, 50, 50);\r\n      cubeMaterial = new THREE.MeshLambertMaterial({\r\n        color: 0xfeb74c,\r\n        map: new THREE.TextureLoader().load(\r\n          \"textures/square-outline-textured.png\"\r\n        )\r\n      });\r\n\r\n      // grid\r\n\r\n      var gridHelper = new THREE.GridHelper(1000, 20);\r\n      scene.add(gridHelper);\r\n\r\n      //\r\n\r\n      raycaster = new THREE.Raycaster();\r\n      mouse = new THREE.Vector2();\r\n\r\n      var geometry = new THREE.PlaneBufferGeometry(1000, 1000);\r\n      geometry.rotateX(-Math.PI / 2);\r\n\r\n      plane = new THREE.Mesh(\r\n        geometry,\r\n        new THREE.MeshBasicMaterial({ visible: false })\r\n      );\r\n      scene.add(plane);\r\n\r\n      objects.push(plane);\r\n\r\n      // lights\r\n\r\n      var ambientLight = new THREE.AmbientLight(0x606060);\r\n      scene.add(ambientLight);\r\n\r\n      var directionalLight = new THREE.DirectionalLight(0xffffff);\r\n      directionalLight.position.set(1, 0.75, 0.5).normalize();\r\n      scene.add(directionalLight);\r\n\r\n      renderer = new THREE.WebGLRenderer({ antialias: true });\r\n      renderer.setPixelRatio(window.devicePixelRatio);\r\n      renderer.setSize(window.innerWidth, window.innerHeight);\r\n      container.appendChild(renderer.domElement);\r\n\r\n      document.addEventListener(\"mousemove\", this.onDocumentMouseMove, false);\r\n      document.addEventListener(\"mousedown\", this.onDocumentMouseDown, false);\r\n      document.addEventListener(\"keydown\", this.onDocumentKeyDown, false);\r\n      document.addEventListener(\"keyup\", this.onDocumentKeyUp, false);\r\n\r\n      //\r\n\r\n      window.addEventListener(\"resize\", this.onWindowResize, false);\r\n    },\r\n\r\n    onDocumentMouseMove(event) {\r\n      event.preventDefault();\r\n\r\n      mouse.set(\r\n        (event.clientX / window.innerWidth) * 2 - 1,\r\n        -(event.clientY / window.innerHeight) * 2 + 1\r\n      );\r\n\r\n      raycaster.setFromCamera(mouse, camera);\r\n\r\n      var intersects = raycaster.intersectObjects(objects);\r\n\r\n      if (intersects.length > 0) {\r\n        var intersect = intersects[0];\r\n\r\n        rollOverMesh.position.copy(intersect.point).add(intersect.face.normal);\r\n        rollOverMesh.position\r\n          .divideScalar(50)\r\n          .floor()\r\n          .multiplyScalar(50)\r\n          .addScalar(25);\r\n      }\r\n\r\n      this.render();\r\n    },\r\n    onDocumentMouseDown(event) {\r\n      event.preventDefault();\r\n\r\n      mouse.set(\r\n        (event.clientX / window.innerWidth) * 2 - 1,\r\n        -(event.clientY / window.innerHeight) * 2 + 1\r\n      );\r\n\r\n      raycaster.setFromCamera(mouse, camera);\r\n\r\n      var intersects = raycaster.intersectObjects(objects);\r\n\r\n      if (intersects.length > 0) {\r\n        var intersect = intersects[0];\r\n\r\n        // delete cube\r\n\r\n        if (isShiftDown) {\r\n          if (intersect.object !== plane) {\r\n            scene.remove(intersect.object);\r\n\r\n            objects.splice(objects.indexOf(intersect.object), 1);\r\n          }\r\n\r\n          // create cube\r\n        } else {\r\n          var voxel = new THREE.Mesh(cubeGeo, cubeMaterial);\r\n          voxel.position.copy(intersect.point).add(intersect.face.normal);\r\n          voxel.position\r\n            .divideScalar(50)\r\n            .floor()\r\n            .multiplyScalar(50)\r\n            .addScalar(25);\r\n          scene.add(voxel);\r\n\r\n          objects.push(voxel);\r\n        }\r\n\r\n        this.render();\r\n      }\r\n    },\r\n\r\n    onWindowResize() {\r\n      camera.aspect = window.innerWidth / window.innerHeight;\r\n      camera.updateProjectionMatrix();\r\n\r\n      renderer.setSize(window.innerWidth, window.innerHeight);\r\n    },\r\n\r\n    // animate() {\r\n    //   requestAnimationFrame(this.animate);\r\n\r\n    //   this.render();\r\n    //   stats.update();\r\n    // },\r\n    render() {\r\n      renderer.render(scene, camera);\r\n    }\r\n    // render() {\r\n    //   particles.rotation.x += 0.0005;\r\n    //   particles.rotation.y += 0.001;\r\n\r\n    //   var geometry = particles.geometry;\r\n    //   var attributes = geometry.attributes;\r\n\r\n    //   raycaster.setFromCamera(mouse, camera);\r\n\r\n    //   intersects = raycaster.intersectObject(particles);\r\n\r\n    //   if (intersects.length > 0) {\r\n    //     if (INTERSECTED != intersects[0].index) {\r\n    //       attributes.size.array[INTERSECTED] = PARTICLE_SIZE;\r\n\r\n    //       INTERSECTED = intersects[0].index;\r\n\r\n    //       attributes.size.array[INTERSECTED] = PARTICLE_SIZE * 1.25;\r\n    //       attributes.size.needsUpdate = true;\r\n    //     }\r\n    //   } else if (INTERSECTED !== null) {\r\n    //     attributes.size.array[INTERSECTED] = PARTICLE_SIZE;\r\n    //     attributes.size.needsUpdate = true;\r\n    //     INTERSECTED = null;\r\n    //   }\r\n\r\n    //   renderer.render(scene, camera);\r\n    // }\r\n  }\r\n};\r\n</script>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/vuetify-loader/lib/loader.js??ref--18-0!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./InteractivePoints.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/vuetify-loader/lib/loader.js??ref--18-0!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./InteractivePoints.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./InteractivePoints.vue?vue&type=template&id=9e5ab628&\"\nimport script from \"./InteractivePoints.vue?vue&type=script&lang=js&\"\nexport * from \"./InteractivePoints.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}